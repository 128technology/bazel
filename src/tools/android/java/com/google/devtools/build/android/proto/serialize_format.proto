// Copyright 2016 The Bazel Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto2";

// option java_api_version = 2;

package xml;

option java_package = "com.google.devtools.build.android.proto";

// A header message describing information about the rest of the message stream,
// It will be the first message in a buffer that contain these messages.
// See com.google.devtools.build.android.AndroidDataSerializer for details on
// how these messages are used.
message Header {
  // The number of ProtoSource entries.
  optional uint32 source_count = 1;
  // The number of keys in the serialized buffer.
  optional uint32 key_count = 2;
  // The number of values in the serialized buffer.
  optional uint32 value_count = 3;
  // The number of xml definitions in the serialized buffer.
  optional uint32 xml_count = 4;
  // The number of xml namespace definitions in the serialized buffer.
  optional uint32 namespaces_count = 5;
}

// The serialized format for a DataKey.
message DataKey {
  // Used for both the FullyQualifiedName name and RelativeAssetPath path
  // Required
  optional string key_value = 1;
  // The resource type for FullyQualifiedNames
  optional string resource_type = 2;
  optional string key_package = 3;
  repeated string qualifiers = 4;
  // Whether this DataKey is a reference to another DataKey.
  optional bool reference = 5;
}

// The serialized format for a DataValue.
message DataValue {
  // The index of the ProtoSource in the source table section.
  // Required
  optional uint32 source_id = 1;

  // Index of stored xml value
  optional uint32 xml_id = 2;

  // Index of stored key.
  // Required
  optional uint32 key_id = 3;

  // Sources that have been overwritten.
  repeated uint32 overwritten_source_id = 4;

  optional uint32 namespace_id = 5;
}

// A container for all the source information to be persisted.
message ProtoSource {
  // Required
  optional string filename = 1;
}

message XmlNamespaces {
  map<string, string> namespace = 1;
}

// The container for a serialized xml value.
message DataValueXml {
  enum XmlType {
    ARRAY = 1;
    ATTR = 2;
    ID = 3;
    PLURAL = 4;
    PUBLIC = 5;
    SIMPLE = 6;
    STYLEABLE = 7;
    STYLE = 8;
    RESOURCES_ATTRIBUTE = 9;
  }

  optional XmlType type = 1;
  map<string, string> mapped_string_value = 2;
  map<string, DataValueXml> mapped_xml_value = 3;
  repeated string list_value = 4;
  optional string value = 5;
  optional string value_type = 6;
  repeated DataKey references = 7;
  map<string, string> attribute = 8;
}
